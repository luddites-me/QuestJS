// prettier-ignore
{
  // https://www.typescriptlang.org/docs/handbook/tsconfig-json.html
  "compilerOptions": {
    // https://www.typescriptlang.org/docs/handbook/compiler-options.html

    /* Basic Options */
    "allowJs": true,                          /* Allow javascript files to be compiled. */
    "declaration": true,                      /* Generates corresponding '.d.ts' file. */
    "declarationMap": true,                   /* Generates a sourcemap for each corresponding '.d.ts' file. */
    "forceConsistentCasingInFileNames": true, /* */
    "isolatedModules": true                   /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */,
    "jsx": "preserve"                         /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */,
    "lib": ["dom", "esnext"]                  /* Specify library files to be included in the compilation. */,
    "module": "commonjs"                      /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */,
    "noEmit": true                            /* Do not emit outputs. */,
    "removeComments": false,                  /* Do not emit comments to output. */
    "sourceMap": true,                        /* Generates corresponding '.map' file. */
    "target": "ESNEXT"                        /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017','ES2018' or 'ESNEXT'. */,
    // "checkJs": true,                       /* Report errors in .js files. */
    // "composite": true,                     /* Enable project compilation */
    // "downlevelIteration": true,            /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */
    // "importHelpers": true,                 /* Import emit helpers from 'tslib'. */
    // "outDir": "./dist",                    /* Redirect output structure to the directory. */
    //"outFile": "./dist/index.ts",           /* Concatenate and emit output to single file. */
    // "rootDir": "./",                       /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */

    /* Strict Type-Checking Options */
    // "alwaysStrict": true,                  /* Parse in strict mode and emit "use strict" for each source file. */
    "noEmitOnError": true,                    /* */
    "noImplicitAny": false,                   /* Raise error on expressions and declarations with an implied 'any' type. */
    "noLib": false,                           /* */
    "noImplicitThis": true,                   /* Raise error on 'this' expressions with an implied 'any' type. */
    //"strict": true                            /* Enable all strict type-checking options. */,
    // "strictBindCallApply": true,           /* Enable strict 'bind', 'call', and 'apply' methods on functions. */
    // "strictFunctionTypes": true,           /* Enable strict checking of function types. */
    // "strictNullChecks": true,              /* Enable strict null checks. */
    // "strictPropertyInitialization": true,  /* Enable strict checking of property initialization in classes. */

    /* Additional Checks */
    "noUnusedLocals": true                    /* Report errors on unused locals. */,
    // "noFallthroughCasesInSwitch": true,    /* Report errors for fallthrough cases in switch statement. */
    // "noImplicitReturns": true,             /* Report error when not all code paths in function return a value. */
    // "noUnusedParameters": true,            /* Report errors on unused parameters. */

    /* Module Resolution Options */
    "allowSyntheticDefaultImports": true,     /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
    "baseUrl": "./",                          /* Base directory to resolve non-absolute module names. */
    "esModuleInterop": true,                  /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    "paths": { "src/*": ["src/*"], },         /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. Must match `alias` in `gatsby-node.js`. */
    "resolveJsonModule": true,
    "skipLibCheck": true,                     /* Skip type checking of all declaration files (*.d.ts). */
    // "moduleResolution": "node",            /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
    // "preserveSymlinks": true,              /* Do not resolve the real path of symlinks. */
    // "rootDirs": [],                        /* List of root folders whose combined content represents the structure of the project at runtime. */
    // "typeRoots": [],                       /* List of folders to include type definitions from. */
    // "types": [],                           /* Type declaration files to be included in compilation. */

    /* Source Map Options */
    // "inlineSourceMap": true,               /* Emit a single file with source maps instead of having a separate file. */
    // "inlineSources": true,                 /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */
    // "mapRoot": "",                         /* Specify the location where debugger should locate map files instead of generated locations. */
    // "sourceRoot": "",                      /* Specify the location where debugger should locate TypeScript files instead of source locations. */

    /* Experimental Options */
    "emitDecoratorMetadata": true,            /* Enables experimental support for emitting type metadata for decorators. */
    "experimentalDecorators": true,           /* Enables experimental support for ES7 decorators. */
  },
  "exclude": [
    "__generated__",
    ".cache",
    ".yarn",
    "artifacts",
    "build",
    "content",
    "docs",
    "node_modules",
    "public",
    "src/**__generated__/**",
    "temp",
  ],
}
